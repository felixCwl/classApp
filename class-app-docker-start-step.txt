#create network my-class-service, use --driver nat if failed to create
docker network create --driver nat my-class-service
#docker network create my-class-service

#start discovery-service first
docker run --name=discovery-service --env=DISCOVERY_SERVICE_PORT=8123 --env=DISCOVERY_SERVICE_NAME=discovery-service --env=COMPLUS_NGenProtectedProcess_FeatureEnabled=0 --env=chocolateyVersion=1.4.0 -p 8123:8123 --network=my-class-service --restart=no -d classappservice/class-app-discovery-service:latest

#then start file-service
docker run --name=file-service --hostname=4fcb1b6f54a9 --env=DISCOVERY_SERVICE_PORT=8123 --env=FILE_SERVICE_PORT=8081 --env=CLASS_SERVICE_PORT=8086 --env=DISCOVERY_SERVICE_NAME=discovery-service --env=FILE_SERVICE_NAME=file-service --env=CLASS_SERVICE_NAME=class-service --env=COMPLUS_NGenProtectedProcess_FeatureEnabled=0 --env=chocolateyVersion=1.4.0 -p 8081:8081 --network=my-class-service --restart=no -d classappservice/class-app-file-service:latest

#then start class-service
docker run --name=class-service --hostname=77383f4958d5 --env=DISCOVERY_SERVICE_PORT=8123 --env=FILE_SERVICE_PORT=8081 --env=CLASS_SERVICE_PORT=8086 --env=DISCOVERY_SERVICE_NAME=discovery-service --env=FILE_SERVICE_NAME=file-service --env=CLASS_SERVICE_NAME=class-service --env=COMPLUS_NGenProtectedProcess_FeatureEnabled=0 --env=chocolateyVersion=1.4.0 -p 8086:8086 --network=my-class-service --restart=no -d classappservice/class-app-class-service:latest

#then start frontend
docker run --name=class-app --user=ContainerAdministrator --workdir=C:\app --network=my-class-service -p 3000 --restart=no -d classappservice/class-app-web:latest